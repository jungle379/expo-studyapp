{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction StackScreen() {\n  return _reactJsxRuntime.jsx(Stack.Navigator, {\n    children: _reactJsxRuntime.jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: function options(_ref) {\n        var navigation = _ref.navigation,\n            route = _ref.route;\n        return {\n          headerTitle: function headerTitle(props) {\n            return _reactJsxRuntime.jsx(LogoTitle, _objectSpread({}, props));\n          }\n        };\n      }\n    })\n  });\n}\n\nfunction HomeScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _reactJsxRuntime.jsx(Button, {\n          onPress: function onPress() {\n            return setCount(function (c) {\n              return c + 1;\n            });\n          },\n          title: \"Update count\"\n        });\n      }\n    });\n  }, [navigation]);\n  return _reactJsxRuntime.jsxs(Text, {\n    children: [\"Count: \", count]\n  });\n}","map":{"version":3,"names":["StackScreen","HomeScreen","navigation","route","headerTitle","props","React","useState","count","setCount","useLayoutEffect","setOptions","headerRight","c"],"sources":["/Users/morinohiroki/Desktop/expo-studyapp/App.jsx"],"sourcesContent":["function StackScreen() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={({ navigation, route }) => ({\n          headerTitle: (props) => <LogoTitle {...props} />,\n        })}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  const [count, setCount] = React.useState(0);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <Button onPress={() => setCount((c) => c + 1)} title=\"Update count\" />\n      ),\n    });\n  }, [navigation]);\n\n  return <Text>Count: {count}</Text>;\n}\n"],"mappings":";;;;;;;;;;AAAA,SAASA,WAAT,GAAuB;EACrB,OACE,qBAAC,KAAD,CAAO,SAAP;IAAA,UACE,qBAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,MADP;MAEE,SAAS,EAAEC,UAFb;MAGE,OAAO,EAAE;QAAA,IAAGC,UAAH,QAAGA,UAAH;QAAA,IAAeC,KAAf,QAAeA,KAAf;QAAA,OAA4B;UACnCC,WAAW,EAAE,qBAACC,KAAD;YAAA,OAAW,qBAAC,SAAD,oBAAeA,KAAf,EAAX;UAAA;QADsB,CAA5B;MAAA;IAHX;EADF,EADF;AAWD;;AAED,SAASJ,UAAT,QAAoC;EAAA,IAAdC,UAAc,SAAdA,UAAc;;EAClC,sBAA0BI,KAAK,CAACC,QAAN,CAAe,CAAf,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEAH,KAAK,CAACI,eAAN,CAAsB,YAAM;IAC1BR,UAAU,CAACS,UAAX,CAAsB;MACpBC,WAAW,EAAE;QAAA,OACX,qBAAC,MAAD;UAAQ,OAAO,EAAE;YAAA,OAAMH,QAAQ,CAAC,UAACI,CAAD;cAAA,OAAOA,CAAC,GAAG,CAAX;YAAA,CAAD,CAAd;UAAA,CAAjB;UAA+C,KAAK,EAAC;QAArD,EADW;MAAA;IADO,CAAtB;EAKD,CAND,EAMG,CAACX,UAAD,CANH;EAQA,OAAO,sBAAC,IAAD;IAAA,sBAAcM,KAAd;EAAA,EAAP;AACD"},"metadata":{},"sourceType":"script"}